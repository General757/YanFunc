/**③.发布到JCenter*/
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

def siteUrl = 'https://github.com/General757/YanFunc'   //项目主页
def gitUrl = 'https://github.com/General757/YanFunc.git'//git仓库


group = 'com.yan.tools'   //groupid  一般为包名
version = '1.0.0'  //版本号

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'YanFunc'// 可选，项目名称
                description 'custom chart for android'// 可选，项目描述
                url siteUrl     //项目地址
                // 软件开源协议
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                //开发者信息
                developers {
                    developer {
                        id 'YanYan'          //yourId
                        name 'YanYan'    //yourName
                        email '1183561804@qq.com' //yourEmail
                    }
                }

                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
//task javadoc(type: Javadoc) {
//    options {
//        encoding "UTF-8"
//        charSet 'UTF-8'
//        author true
//        version true
//        links "http://docs.oracle.com/javase/7/docs/api"
//    }
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//    options.encoding = "UTF-8"
//    failOnError false // 忽略注释语法错误，如果用jdk1.8你的注释写的不规范就编译不过。
//}
//// 生成jar包的task
//task sourcesJar(type: Jar) {
//    classifier = 'sources'
//    from android.sourceSets.main.java.srcDirs
//}
//// 生成javaDoc的jar，不需要修改。
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//artifacts {
//    archives javadocJar
//    archives sourcesJar
////    archives androidJavadocsJar
//}
task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}

bintray {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'YanFunc'   //发布到JCenter上项目名
        userOrg = 'ycy'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']
        publish = true
    }
}
//2f98440f64266b47e59c0d2bbe3cf4f81a675cc1
//gradlew clean build bintrayUpload -PbintrayUser=BINTRAY_USERNAME -PbintrayKey=BINTRAY_KEY -PdryRun=false
//./gradlew clean build bintrayUpload -PbintrayUser=generalyan -PbintrayKey=2f98440f64266b47e59c0d2bbe3cf4f81a675cc1 -PdryRun=false
//./gradlew clean build bintrayUpload -PdryRun=false
//Uploaded to 'https://api.bintray.com/content/generalyan/maven/tools/1.0.0/com/yan/tools/tools/1.0.0/tools-1.0.0.aar'.
//Uploaded to 'https://api.bintray.com/content/generalyan/maven/OXViewLib/1.0.3/com/openxu/viewlib/OXViewLib/1.0.3/OXViewLib-1.0.3.aar'.




